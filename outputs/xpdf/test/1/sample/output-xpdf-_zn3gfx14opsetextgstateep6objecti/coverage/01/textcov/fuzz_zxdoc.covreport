_ZN3Gfx14opSetExtGStateEP6Objecti:
   29|     20|    void opSetExtGState(Object *obj, int state) {
   30|       |        // Function implementation
   31|       |        // Here you can utilize the state and the object's internal data
   32|       |        // For example, you might change the object's state based on the input
   33|     20|    }
LLVMFuzzerTestOneInput:
   36|     22|extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
   37|       |    // Initialize FuzzedDataProvider
   38|     22|    FuzzedDataProvider fuzzed_data(data, size);
   39|       |
   40|       |    // Create an instance of Object
   41|     22|    Object obj;
   42|       |
   43|       |    // Consume an integer value for the state parameter
   44|     22|    int state = fuzzed_data.ConsumeIntegral<int>();
   45|       |
   46|       |    // Consume a random length string for the object's data
   47|     22|    std::string input_data = fuzzed_data.ConsumeRandomLengthString();
   48|       |
   49|       |    // Validate the size of the consumed data
   50|     22|    if (input_data.size() > 0) {
  ------------------
  |  Branch (50:9): [True: 20, False: 2]
  ------------------
   51|       |        // Set the data on the object
   52|     20|        obj.setData(reinterpret_cast<const uint8_t*>(input_data.data()), input_data.size());
   53|       |        
   54|       |        // Call the function under test
   55|     20|        Gfx::opSetExtGState(&obj, state);
   56|     20|    }
   57|       |
   58|     22|    return 0;
   59|     22|}
_ZN6ObjectC2Ev:
   10|     22|    Object() {
   11|       |        // Initialize object state if necessary
   12|     22|        memset(data, 0, sizeof(data)); // Example initialization
   13|     22|    }
_ZN6Object7setDataEPKhm:
   16|     20|    void setData(const uint8_t* input, size_t size) {
   17|       |        // Ensure we don't exceed the buffer size
   18|     20|        if (size > sizeof(data)) {
  ------------------
  |  Branch (18:13): [True: 0, False: 20]
  ------------------
   19|      0|            size = sizeof(data);
   20|      0|        }
   21|     20|        memcpy(data, input, size);
   22|     20|    }

